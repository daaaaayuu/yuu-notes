每天花大概1小時左右學習微服務相關技術直到懶惰或學不動為止
2024/06/27 Day7
Spring Boot篇


一.當table的id會自動增加時，可以使用KeyHolder取得id的值
1.配合mysql DB 新建Student Table
auto_increment:為mysql 自動生成key的語法

create table student(
    id int PRIMARY KEY auto_increment,
    name VARCHAR(30)
    );


2.KeyHolder
執行insert時取得資料庫自動生成的key

3.int id = keyHolder.getKey().intValue();
會因DB類型而用不同的.intValue();

@RestController
public class StudentController {

    @Autowired
    private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

    @PostMapping("/students")
    public String insert(@RequestBody Student student){

        String sql = "insert into student(name) value (:studentName)";

        Map<String, Object> map = new HashMap<>();
        map.put("studentName",student.getName());

        KeyHolder keyHolder = new GeneratedKeyHolder();

        namedParameterJdbcTemplate.update(sql,new MapSqlParameterSource(map),keyHolder);
        int id = keyHolder.getKey().intValue();
        System.out.println("mysql 自動生成的 id 為: "+id);
        return "執行 INSERT SQL";
    }
  }  

二.大量的執行一批insert/update/delete SQL
1.batchUpdate();

@RestController
public class StudentController {

    @Autowired
    private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

    @PostMapping("/students/batch")
    public  String insertList(@RequestBody List<Student> studentList){
        String sql = "insert into student(name) value(:studentName)";

        MapSqlParameterSource[] parameterSources = new MapSqlParameterSource[studentList.size()];
        for (int i=0; i<studentList.size(); i++){
            Student student = studentList.get(i);
            parameterSources[i] = new MapSqlParameterSource();
            parameterSources[i].addValue("studentName",student.getName());
        }
        namedParameterJdbcTemplate.batchUpdate(sql,parameterSources);

        return "執行一批 INSERT sql";
    }

  } 


3.迴圈中使用Update()，也是可以insert大量資料，但會call多次，效能較差，所以有大量insert需求時，使用batchUpdate()效能會更好!

        for (int i=0; i<studentList.size(); i++){
            Student student = studentList.get(i);
            parameterSources[i] = new MapSqlParameterSource();
            parameterSources[i].addValue("studentName",student.getName());
            namedParameterJdbcTemplate.Update(sql,parameterSources);
        }
  








    
